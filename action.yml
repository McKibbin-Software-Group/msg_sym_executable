name: 'Run sym processor & upload results'
description: 'Downloads repo, runs the sym parser, and uploads the results'

inputs:
  sym-files-path:
    description: 'Relative path of the sym files'
    required: true
  main-sym-filename:
    description: 'Main sym file, passed to sym processor command line'
    required: true
  main-python-model-filename:
    description: 'Main python model filename, passed to sym processor command line'
    required: true
  main-html-model-filename:
    description: 'Main html model filename, passed to sym processor command line'
    required: true
  git-bot-name:
    description: 'Name to use for git push'
    required: true
  git-bot-email:
    description: 'email address to use for git push'
    required: true
  python-mode:
    description: 'Run sym with -python switch'
    required: true
  html-mode:
    description: 'Run sym with -html switch'
    required: true
  

outputs:
  python-exit-code:
    description: 'Exit code of sym python run'
    value: ${{steps.run-sym-parser.outputs.pythonExitCode}}
  html-exit-code:
    description: 'Exit code of sym html run'
    value: ${{steps.run-sym-parser.outputs.htmlExitCode}}

runs:
  using: 'composite'
  steps:
    - name: Check Runner OS
      id: check-runner-os
      if: ${{ runner.os != 'Windows' }}
      shell: pwsh
      run: |
        echo "::error title=â›” Wrong Platform::Supports Windows Only - change 'runs-on:' to '[windows-latest]'"
        exit 1

    - name: Pull files from the repo
      uses: actions/checkout@v4  

    - name: Run the sym parser
      id: run-sym-parser
      shell: pwsh
      run: |
        echo "Hello ${{github.actor}}. Found changed sym files in: ${{inputs.sym-files-path}}."
        cd "${{inputs.sym-files-path}}"
        echo "Files in sym directory:"
        dir

        $keepFiles = @('*.sym','*.bat','*.sh')
        $filesToDelete = Get-ChildItem *.* -Exclude $keepFiles
        if($filesToDelete.length -gt 0) { 
          echo "Will delete these extraneous files first:"
          $filesToDelete
          Remove-Item $filesToDelete
        } else { 
          echo "No extraneous files to delete." 
        }

        echo "Starting SYM with this list of files:"
        dir

        if ("${{inputs.python-mode}}" -eq "yes") {
          echo "Invoking ${{github.action_path}}\executable\sym4win.exe with the following parameters: -python ${{inputs.main-sym-filename}} ${{inputs.main-python-model-filename}}"
          ${{github.action_path}}\executable\sym4win.exe -python ${{inputs.main-sym-filename}} ${{inputs.main-python-model-filename}}
          # $pythonExitCodeText = 'pythonExitCode="'+$LastExitCode+'"'
          $pythonExitCodeText = 'pythonExitCode=dog'
          echo $pythonExitCodeText >> "$GITHUB_OUTPUT"
          echo $pythonExitCodeText
        }

        if ("${{inputs.html-mode}}" -eq "yes") {
          echo "Invoking ${{github.action_path}}\executable\sym4win.exe with the following parameters: -html ${{inputs.main-sym-filename}} ${{inputs.main-html-model-filename}}"
          ${{github.action_path}}\executable\sym4win.exe -html ${{inputs.main-sym-filename}} ${{inputs.main-html-model-filename}}
          # $htmlExitCodeText = 'htmlExitCode="'+$LastExitCode+'"' 
          $htmlExitCodeText = "htmlExitCode=cat"
          echo "$htmlExitCodeText" >> "$GITHUB_OUTPUT"
          echo $htmlExitCodeText
        }

        echo "Directory afer processing:"
        dir

    - name: Push results back to repo
      shell: pwsh
      run: |
        git config --local user.name "${{inputs.git-bot-name}}"
        git config --local user.email "${{inputs.git-bot-email}}"
        git fetch
        git add *
        git commit -am "Results of SYM run by ${{github.actor}} on $(date)" 
        git push

